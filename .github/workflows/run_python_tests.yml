name: Python tests

on: [push, pull_request]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  test:
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:    
    - name: Install cfitsio
      run: |
          if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            #
            # Build cfitsio
            #
            curl "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-3.49.tar.gz" -o cfitsio.tar.gz
            tar -xf cfitsio.tar.gz
            rm cfitsio.tar.gz
            cd cfitsio-3.49
            # Enabling SSE2/SSSE3 could cause portability problems, but it's unlikely that anyone
            # is using such a CPU...
            # https://stackoverflow.com/questions/52858556/most-recent-processor-without-support-of-ssse3-instructions
            # Disabling curl just means you cannot fits_open() using a URL.
            CFLAGS="-O3" ./configure --prefix=/usr/local --enable-reentrant --enable-sse2 --enable-ssse3 --disable-curl
            make -j
            sudo make install
            sudo ldconfig
            cd ..
          elif [[ "$OSTYPE" == "darwin"* ]]; then
            #
            # Build cfitsio      
            #
            curl "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-3.49.tar.gz" -o cfitsio.tar.gz
            tar -xf cfitsio.tar.gz
            rm cfitsio.tar.gz
            cd cfitsio-3.49
            # Enabling SSE2/SSSE3 could cause portability problems, but it's unlikely that anyone
            # is using such a CPU...
            # https://stackoverflow.com/questions/52858556/most-recent-processor-without-support-of-ssse3-instructions
            # Disabling curl just means you cannot fits_open() using a URL.
            CFLAGS="-O3" ./configure --prefix=/usr/local --enable-reentrant --enable-sse2 --enable-ssse3 --disable-curl
            sudo make shared
            sudo make install
            cd ..
          fi

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: stable
          override: true

    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run pytests
      run: |
          pip3 install --upgrade pip
          python3 -m venv env
          source env/bin/activate

          pip3 install maturin==1.2.3
          if [[ "$OSTYPE" == "darwin"* ]]; then
            brew install automake
          fi

          maturin develop --features=python,cfitsio-static --strip

          pip install pytest          
          pytest
