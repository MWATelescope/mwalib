name: Code Coverage

on: [push, pull_request]

env:
  RUST_BACKTRACE: 1

jobs:  
  generate_coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    
    - name: Install nightly toolchain
      uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: nightly-2021-05-09
          override: true
          components: llvm-tools-preview
    
    - name: Build cfitsio
      run: |
          # Install dependencies
          curl "https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-3.49.tar.gz" -o cfitsio.tar.gz
          tar -xf cfitsio.tar.gz
          rm cfitsio.tar.gz
          cd cfitsio-3.49
          # Enabling SSE2/SSSE3 could cause portability problems, but it's unlikely that anyone
          # is using such a CPU...
          # https://stackoverflow.com/questions/52858556/most-recent-processor-without-support-of-ssse3-instructions
          # Disabling curl just means you cannot fits_open() using a URL.
          CFLAGS="-O3" ./configure --prefix=/usr/local --enable-reentrant --enable-sse2 --enable-ssse3 --disable-curl
          make -j
          sudo make install
          sudo ldconfig
          cd ..

    - name: Install cargo profdata
      run: cargo install cargo-binutils

    - name: Generate test lcov coverage into coverage/ dir
      run: |
          mkdir -p coverage
          RUSTFLAGS="-Zinstrument-coverage" LLVM_PROFILE_FILE="json5format-%m.profraw" rustup run nightly cargo test --tests
          rustup run nightly cargo profdata -- merge -sparse json5format-*.profraw -o json5format.profdata
          rustup run nightly cargo cov -- export --format=lcov --ignore-filename-regex='(/.cargo/registry|/rustc|test.rs$)' --instr-profile=json5format.profdata \
          $( \
              for file in \
                      $( \
                          RUSTFLAGS="-Zinstrument-coverage" LLVM_PROFILE_FILE="json5format-%m.profraw" rustup run nightly cargo test --tests --no-run --message-format=json \
                                  | jq -r "select(.profile.test == true) | .filenames[]" \
                                  | grep -v dSYM - \
                  ); \
                do \
                    printf "%s %s " -object $file; \
                done \
          ) > coverage/coverage.lcov

    - name: Upload reports to codecov.io
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
