name: Release

# Do this on every push with a version tag
on:
  push:
    tags:
      - "v*"

env:  
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build-linux-release:
    name: Build release for Linux
    runs-on: ubuntu-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
    
    - name: Build mwalib
      uses: docker://mwatelescope/maturin:latest
      with:
        entrypoint: /bin/bash
        args: .github/workflows/build.sh
        
    - name: Upload tarball
      uses: actions/upload-artifact@v2
      with:
        name: linux.tar.gz
        path: "*.tar.gz"
        if-no-files-found: error

  build-macos-release:
    name: Build release for MacOS
    runs-on: macos-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true        
  
    - name: Add Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
        architecture: "x64"

    - name: Add Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
        architecture: "x64"

    - name: Add Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
        architecture: "x64"

    - name: Add Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: "3.11"
        architecture: "x64"

    - name: Add Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: "3.12"
        architecture: "x64"

    - name: Build mwalib
      run: ./.github/workflows/build.sh
      shell: bash   

    - name: Upload tarball
      uses: actions/upload-artifact@v2
      with:
        name: macos.tar.gz
        path: "*.tar.gz"
        if-no-files-found: error

  create-release:
    name: Create a new release
    runs-on: ubuntu-latest
    needs: [build-linux-release, build-macos-release]
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: linux.tar.gz

      - name: Download Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: macos.tar.gz

      - name: Provide new release asset
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.tar.gz